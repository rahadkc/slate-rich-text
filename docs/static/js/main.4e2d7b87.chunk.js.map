{"version":3,"sources":["components/FormatToolbar.js","components/InputField.js","components/TextEditor.js","App.js","serviceWorker.js","index.js"],"names":["FormatToolbar","props","react_default","a","createElement","className","children","Input","styled","input","_templateObject","InputField","Image","img","TextEditor_templateObject","Button","button","_templateObject2","primary","disabled","schema","blocks","image","isVoid","DEFAULT_NODE","isBoldHotkey","isKeyHotkey","isItalicHotkey","isUnderlinedHotkey","isCodeHotkey","existingValue","JSON","parse","localStorage","getItem","TextEditor","state","value","Value","fromJSON","initialValue","blockCount","handleChange","e","target","name","_this","setState","Object","defineProperty","parseInt","handleSaveContent","type","content","stringify","editor","toJSON","setItem","hasMark","activeMarks","some","mark","hasBlock","node","ref","renderMarkButton","icon","isActive","active","toString","onMouseDown","event","onClickMark","renderBlockButton","includes","_this$state$value","document","size","parent","getParent","first","key","onClickBlock","renderImageButton","onChange","handleUploadImage","renderEditor","next","blockLimit","getBlocks","renderNode","attributes","isFocused","src","data","get","assign","selected","renderMark","insertImage","select","insertBlock","_ref","handleTabList","block","depth","getDepth","isList","shiftKey","preventDefault","setBlocks","wrapBlock","unwrapBlock","text","length","onKeyDown","toggleMark","assertThisInitialized","isType","getClosest","_this2","this","components_FormatToolbar","md","placeholder","onClick","slate_react_es","spellCheck","autoFocus","_this3","reader","FileReader","file","files","alert","addEventListener","result","command","readAsDataURL","React","Component","App","components_TextEditor","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e2d7b87.chunk.js","sourcesContent":["import React from 'react'\n\nconst FormatToolbar = props => (\n  \n  <div className=\"format-toobar\">{props.children}</div>\n\n);\n\nexport default FormatToolbar;","import React from 'react'\nimport styled from 'styled-components'\n\nconst Input = styled.input`\n  padding: 10px;\n  height: 34px;\n  border-radius: 6px;\n`;\n\nexport default function InputField(props) {\n  return <Input {...props} />\n}\n","import { Editor } from \"slate-react\";\nimport { Value } from \"slate\";\nimport React from \"react\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport styled from 'styled-components'\nimport { \n  MdFormatBold, \n  MdFormatItalic, \n  MdFormatUnderlined, \n  MdImage, \n  MdFormatListBulleted, \n  MdFormatListNumbered, \n  MdCode, \n  MdFormatQuote } from \"react-icons/md\";\nimport FormatToolbar from './FormatToolbar';\nimport initialValue from \"./value.json\";\nimport InputField from './InputField'\n\n\nconst Image = styled.img`\n  display: block;\n  max-width: 100%;\n  max-height: 20em;\n  margin-top: 10px;\n  margin-bottom: 10px`;\n\nconst Button = styled.button`\n  background: ${props => props.primary ? \"#74e2d3\" : \"white\"};\n  color: ${props => props.primary ? \"white\" : \"#74e2d3\"};\n  border:none;\n  box-shadow:none;\n  border-radius: 6px;\n  cursor: pointer;\n  display: inline-block;\n  padding: 9px;\n  margin: 0 5px;\n  pointer-events: ${props => props.disabled ? 'none' : 'inherit'};\n  opacity: ${props => props.disabled ? 0.4 : 1};\n\n  :hover {\n    opacity: 0.7;\n  }\n`;\n\nconst schema = {\n  blocks: {\n    image: {\n      isVoid: true\n    }\n  }\n};\n\nconst DEFAULT_NODE = \"paragraph\";\n\n\nconst isBoldHotkey = isKeyHotkey(\"alt+b\");\nconst isItalicHotkey = isKeyHotkey(\"alt+i\");\nconst isUnderlinedHotkey = isKeyHotkey(\"alt+u\");\nconst isCodeHotkey = isKeyHotkey(\"alt+`\");\n\nconst existingValue = JSON.parse(localStorage.getItem('content'));\n\nclass TextEditor extends React.Component {\n  \n\n  state = {\n    value: Value.fromJSON(existingValue || initialValue)\n  };\n\n  blockCount = 0;\n\n  handleChange = (e) => {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({ \n      [name]: parseInt(value,10)\n     })\n  }\n\n  handleSaveContent = (type) => {\n    if (type === 'save') {\n      const content = JSON.stringify(this.editor.value.toJSON())\n      localStorage.setItem('content', content);\n    } else {\n      this.setState({\n        value: Value.fromJSON(existingValue || initialValue)\n      })\n    }\n  }\n  \n\n  hasMark = type => {\n    const { value } = this.state;\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n\n  hasBlock = type => {\n    const { value } = this.state;\n    return value.blocks.some(node => node.type === type);\n  };\n\n\n  ref = editor => {\n    this.editor = editor;\n  };\n\n  \n\n  render() {\n    return (\n      <div>\n        <FormatToolbar>\n          {this.renderMarkButton(\"bold\", <MdFormatBold/>)}\n          {this.renderMarkButton(\"italic\", <MdFormatItalic/>)}\n          {this.renderMarkButton(\"underlined\", <MdFormatUnderlined/>)}\n          {this.renderMarkButton(\"code\", <MdCode/>)}\n          {this.renderBlockButton(\"heading-one\", \"H1\")}\n          {this.renderBlockButton(\"heading-two\", \"H2\")}\n          {this.renderBlockButton(\"block-quote\", <MdFormatQuote/>)}\n          {this.renderBlockButton(\"numbered-list\", <MdFormatListNumbered/>)}\n          {this.renderBlockButton(\"bulleted-list\", <MdFormatListBulleted/>)}\n          {this.renderImageButton(\"image\", <MdImage/>)}\n          <InputField \n            type=\"number\" \n            placeholder=\"Set Block limit\" \n            name=\"blockLimit\" \n            onChange={this.handleChange}\n          />\n          <div className=\"\">\n            <Button primary onClick={() => this.handleSaveContent('save')} disabled={this.blockCount > this.state.blockLimit}>Save</Button>\n            <Button onClick={() => this.handleSaveContent('cancel')}>Cancel</Button>\n          </div>\n        </FormatToolbar>\n       \n       <div className=\"editor-field\">\n        <Editor\n            spellCheck\n            autoFocus\n            placeholder=\"Enter some rich text...\"\n            schema={schema}\n            ref={this.ref}\n            value={this.state.value}\n            onChange={this.onChange}\n            onKeyDown={this.onKeyDown}\n            renderNode={this.renderNode}\n            renderEditor={this.renderEditor}\n            renderMark={this.renderMark}\n          />\n       </div>\n      </div>\n    );\n  }\n\n\n\n  renderMarkButton = (type, icon) => {\n    const isActive = this.hasMark(type);\n\n    return (\n      <button\n        className=\"tooltip-icon-button\"\n        active={isActive.toString()}\n        onMouseDown={event => this.onClickMark(event, type)}\n      >\n        <i>{icon}</i>\n      </button>\n    );\n  };\n\n  \n\n  renderBlockButton = (type, icon) => {\n    let isActive = this.hasBlock(type);\n\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const {\n        value: { document, blocks }\n      } = this.state;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = this.hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return (\n      <button\n        className=\"tooltip-icon-button\"\n        active={isActive.toString()}\n        onMouseDown={event => this.onClickBlock(event, type)}\n      >\n        <i>{icon}</i>\n      </button>\n    );\n  };\n\n  renderImageButton = (type, icon) => {\n    let isActive = this.hasBlock(type);\n\n    return (\n      <button\n        className=\"tooltip-icon-button imgBtn\"\n        active={isActive.toString()}\n      >\n        <input type=\"file\" ref=\"file\" onChange={event => this.handleUploadImage(event)}/>\n        <b>{icon}</b>\n      </button>\n    );\n  };\n\n\n  renderEditor = (props, editor, next) => {\n    const { blockLimit } =  this.state;\n    const children = next()\n    const blockCount = props.value.document.getBlocks().size;\n\n    return (\n      <div>\n        <div>{children}</div>\n        <div className=\"editor-tools\">\n          <h3>Block Count: {blockCount}</h3>\n          <h3>Max block limit: {blockLimit ? blockLimit : \"None\"}</h3>\n        </div>\n      </div>\n    )\n  }\n\n  renderNode = (props, editor, next) => {\n    const { attributes, parent, children, node, isFocused } = props;\n\n      this.blockCount = parent.getBlocks().size;\n\n\n      switch (node.type) {\n        case \"block-quote\":\n          return <blockquote {...attributes}>{children}</blockquote>;\n        case \"bulleted-list\":\n          return <ul {...attributes}>{children}</ul>;\n        case \"heading-one\":\n          return <h1 {...attributes}>{children}</h1>;\n        case \"heading-two\":\n          return <h2 {...attributes}>{children}</h2>;\n        case \"list-item\":\n          return <li {...attributes}>{children}</li>;\n        case \"numbered-list\":\n          return <ol {...attributes}>{children}</ol>;\n        case \"image\": {\n          const src = node.data.get('src')\n          return <Image src={src} selected={isFocused} {...attributes} />;\n        }\n        default:\n          return next();\n      }\n  };\n\n  renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"code\":\n        return <code {...attributes}>{children}</code>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"underlined\":\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n\n  handleUploadImage(e) {\n    const reader = new FileReader();\n    const file = e.target.files[0];\n    if (this.blockCount > this.state.blockLimit) {\n      alert('Block limit exceeded');\n      return;\n    };\n    reader.addEventListener('load', () => \n      this.setState({ src: reader.result }, () => {\n        this.editor.command(this.insertImage, this.state.src);\n      })\n    )\n    reader.readAsDataURL(file)\n  }\n\n  insertImage = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n    editor.insertBlock({\n      type: \"image\",\n      data: { src }\n    });\n  };\n\n  onChange = ({ value }) => {\n    this.setState({ value });\n  };\n\n  handleTabList = (event, editor, next) => {\n    const { value } = editor;\n    const { document } = value;\n    const block = value.blocks.first();\n    const parent = block ? document.getParent(block.key) : null;\n    const type = !parent.type ? 'bulleted-list' : parent.type;\n    const depth = document.getDepth(block.key);\n    const isList = this.hasBlock('list-item');\n\n    // console.log(block.text, 'depth', editor.nodes, 'parent', parent.getBlocks(block.key).isEmpty())\n\n    if (!event.shiftKey && event.key === 'Tab' && isList) {\n      event.preventDefault();\n\n      if (depth > 3){\n        return next();\n      } \n      if (parent) {\n        editor.setBlocks('list-item').wrapBlock(type);\n      }\n    }\n\n    if (event.shiftKey && event.key === 'Tab' && isList) {\n      if (depth < 3 ) {\n        return next();\n      }\n      event.preventDefault();\n      editor.setBlocks('list-item').unwrapBlock(type)\n    }\n\n    if (event.key === 'Enter' &&  !block.text.length) {\n      editor\n      .unwrapBlock('bulleted-list')\n      .unwrapBlock('numbered-list')\n      .setBlocks(DEFAULT_NODE)\n    }\n  }\n\n  onKeyDown = (event, editor, next) => {\n    \n    this.handleTabList(event, editor, next);\n\n    if(this.blockCount > this.state.blockLimit && event.key !== 'Backspace') {\n      event.preventDefault();\n      return ;\n    }\n     \n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n\n  onClickMark = (event, type) => {\n    event.preventDefault();\n    this.editor.toggleMark(type);\n  };\n\n\n  onClickBlock = (event, type) => {\n    event.preventDefault();\n\n    const { editor } = this;\n    const { value } = editor;\n    const { document } = value;\n\n    // Handle everything but list buttons.\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = this.hasBlock(type);\n      const isList = this.hasBlock(\"list-item\");\n\n\n      if (isList) {\n        editor\n          .setBlocks(isActive ? DEFAULT_NODE : type)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = this.hasBlock(\"list-item\");\n      const isType = value.blocks.some(block => {\n        return !!document.getClosest(block.key, parent => parent.type === type);\n      });\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_NODE)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\"\n          )\n          .wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n}\n\n/**\n * Export.\n */\n\nexport default TextEditor;\n","import React, { Component } from 'react';\nimport { TextEditor } from './components';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"editor\">\n          <TextEditor/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}